#include<stdio.h>
#include<unistd.h>
#include<stdlib.h>
#include<pthread.h>
#define MAX 1000
#define MIN 100
#define SIZE 900
int a[900],b[900],c[900];
int  allocate_map()
{
        int y=MIN;
        for(int i=0;i<=900;i++)
        {
                a[i]=0;
                b[i]=y;
                y++;
        }
}




int items[SIZE];
int front = -1, rear =-1;

int allocate_pid()
{
        int i;
        for(i=0;i<=900;i++)
        {
                if(a[i]==0)
                break;
        }
        if(i>900)
        {
                printf("cannot assign\n");
                return 0;
        }
        else
        {
                a[i]=1;
                printf("process id =%d is assigned\n",b[i]);

                return b[i];

        }
}
void release_pid(int x)
{
        int  y;
        y=x-100;
        a[y]=0;
        printf("process having  id %d  is released\n",b[y]);
}
void sleep1()
{
        int d=rand()%10;
        printf("%d\n",d);
        sleep(d);
}
void test()
{

                int j=0;
                c[j]=allocate_pid();
                                
                sleep1();
                release_pid(c[j]);
}

main()
{       int i;
        pthread_t pt[100];
        allocate_map();
for(i=0;i<100;i++)
        pthread_create(&pt[i],NULL,test,NULL);
for(i=0;i<100;i++)
pthread_join(pt[i],NULL);
}

